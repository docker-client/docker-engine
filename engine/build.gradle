buildscript {
    repositories {
        mavenLocal()
        jcenter()
        gradlePluginPortal()
        mavenCentral()
    }

    dependencies {
        classpath "gradle.plugin.net.ossindex:ossindex-gradle-plugin:0.3.21"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
    }
}

apply plugin: "net.ossindex.audit"
apply plugin: "maven"
apply plugin: "maven-publish"
apply plugin: "com.jfrog.bintray"

ext {
    bintrayDryRun = false
}

repositories {
    mavenLocal()
    jcenter()
    maven { url "http://dl.bintray.com/jetbrains/spek" }
    mavenCentral()
}

dependencies {
    compile "org.codehaus.groovy:groovy:2.5.4"
    compile "org.codehaus.groovy:groovy-json:2.5.4"

    compile "org.slf4j:slf4j-api:1.7.25"
    testCompile "ch.qos.logback:logback-classic:1.2.3"

    compile "com.squareup.okio:okio:2.1.0"
    compile "com.squareup.okhttp3:okhttp:3.12.1"
    testCompile "com.squareup.okhttp3:mockwebserver:3.12.1"

    compile "org.apache.commons:commons-compress:1.18"

    compile "de.gesellix:docker-filesocket:2018-12-29T15-29-51"
    testCompile "de.gesellix:testutil:2018-12-29T16-12-32"

    compile "org.bouncycastle:bcpkix-jdk15on:1.60"

    testCompile "org.spockframework:spock-core:1.2-groovy-2.5"
    testCompile "cglib:cglib-nodep:3.2.10"

    testCompile "commons-lang:commons-lang:2.6"
}

task sourcesJar(type: Jar) {
    dependsOn classes
    classifier "sources"
    from sourceSets.main.allSource
}

test {
    // minimal way of providing a special environment variable for the EnvFileParserTest
    environment "A_KNOWN_VARIABLE", "my value"
}

artifacts {
    archives sourcesJar
}

install {
    repositories.mavenInstaller {
        pom.groupId = "de.gesellix"
        pom.artifactId = "docker-engine"
        pom.version = "local"
    }
}

publishing {
    publications {
        engineClient(MavenPublication) {
            artifactId "docker-engine"
            version artifactVersion
            from components.java
            artifact sourcesJar
        }
    }
}

bintray {
    user = System.env.BINTRAY_USER ?: project["bintray.user"]
    key = System.env.BINTRAY_API_KEY ?: project["bintray.key"]
    publications = ["engineClient"]
    pkg {
        repo = "docker-utils"
        name = "engine-client"
        desc = "Bare HTTP client for the Docker engine api"
        licenses = ["MIT"]
        labels = ["docker", "engine api", "remote api", "http", "client", "java", "kotlin"]
        version = [
                name: artifactVersion
        ]
        vcsUrl = "https://github.com/docker-client/docker-engine.git"
    }
    dryRun = bintrayDryRun
}
bintrayUpload.dependsOn build
